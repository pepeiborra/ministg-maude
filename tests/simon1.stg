
load "prelude.stg" .

mod MINISTG-MODULE is including MINISTG-PRELUDE .

op pgm : -> Heap .
eq pgm =
  Prelude ;
  'c = CON (I 21);
  'main = THUNK (
       let 'g = FUN ('x -> 'dblInt 'x) in 'g 'c)
  .
endm

mod MINISTG-MODULE-EVALUATION is
    including MINISTG-MODULE .
    protecting MINISTG-RELATION-EVALUATION .
endm

mod MINISTG-MODULE-EVALUATION is
  including MINISTG-MODULE .
  protecting  MINISTG-RELATION-EVALUATION .
endm

mod MINISTG-MODULE-EVALUATION-ARGS is
  including MINISTG-MODULE .
  protecting  MINISTG-RELATION-EVALUATION-ARGS .
endm

mod MINISTG-MODULE-EVALUATION-TRACKTHUNKS is
  including MINISTG-MODULE .
  protecting  MINISTG-RELATION-EVALUATION-TRACKTHUNKS .
endm

mod MINISTG-MODULE-STATIC is
  including MINISTG-MODULE .
  protecting  MINISTG-RELATION-STATIC .
endm

mod MINISTG-MODULE-STRICT is
  including MINISTG-MODULE .
  protecting  MINISTG-RELATION-STRICT .
endm

***(
- In all the cases, the program is annotated with -auto-all-deep
- The stack traces shown above correspond to the CCS immediately before returning to main
- The EVALUATION variant uses evaluation scoping, and restores the CCS after an UPD frame is reduced
- The EVALUATION-ARGS variant uses evaluation scoping, and restores the CCS after an ARGS frame is reduced
- The TRACKTHUNKS variant uses evaluation scoping with restore on UPD frames, but appends instead of overwriting the current CCS in the THUNK rule
- The eager stack trace for this example would be: "main" | "main.g" | "dblInt" | "plusInt" which is exactly what we obtain

***)


rew in MINISTG-MODULE-EVALUATION : getStackTraceSet (eval(pgm)) . 
rew in MINISTG-MODULE-EVALUATION-ARGS : getStackTraceSet (eval(pgm)) . 
rew in MINISTG-MODULE-EVALUATION-TRACKTHUNKS : getStackTraceSet (eval(pgm)) .
rew in MINISTG-MODULE-STATIC : getStackTraceSet (eval(pgm)) .
rew in MINISTG-MODULE-STRICT : getStackTraceSet (eval(pgm)) .

rew in MINISTG-MODULE-EVALUATION : getLastStackTrace (eval(pgm)) .             ***
rew in MINISTG-MODULE-EVALUATION-ARGS : getLastStackTrace (eval(pgm)) .        ***
rew in MINISTG-MODULE-EVALUATION-TRACKTHUNKS : getLastStackTrace (eval(pgm)) . ***
rew in MINISTG-MODULE-STATIC : getLastStackTrace (eval(pgm)) .                 ***
rew in MINISTG-MODULE-STRICT : getLastStackTrace (eval(pgm)) .                 ***
--- rew in MINISTG-MODULE-STRICT :  (eval(pgm)) .

