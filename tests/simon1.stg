
load "prelude.stg" .

mod MINISTG-SIMON1 is including MINISTG-PRELUDE .

op pgm : -> Heap .
eq pgm =
  Prelude ;
  'c = CON (I 21);
  'main = THUNK (stack "main" 
       let 'g = FUN ('x -> 'dblInt 'x) in
       stack "main2" 'g 'c)
  .
endm

mod MINISTG-SIMON1-EVALUATION is
  including MINISTG-SIMON1 .
  protecting  MINISTG-RELATION-EVALUATION .
endm

***( The stack obtained is:
     "main" | "main1" | "g.res" | "main.h" | "g.j" | "dblInt" | "plusInt"
***)

mod MINISTG-SIMON1-EVALUATION-ARGS is
  including MINISTG-SIMON1 .
  protecting  MINISTG-RELATION-EVALUATION-ARGS .
endm

*** The stack obtained is the same as above.

*** In none of these does "g" appear in the stack. Is this important ?

mod MINISTG-SIMON1-EVALUATION-TRACKTHUNKS is
  including MINISTG-SIMON1 .
  protecting  MINISTG-RELATION-EVALUATION-TRACKTHUNKS .
endm

--- rewrite in MINISTG-SIMON1-EVALUATION : eval(pgm) .
--- rewrite in MINISTG-SIMON1-EVALUATION-ARGS : eval(pgm) .
rewrite in MINISTG-SIMON1-EVALUATION-TRACKTHUNKS : eval(pgm) .


rew in MINISTG-SIMON1-EVALUATION : getLastStackTrace (eval(pgm)) .
rew in MINISTG-SIMON1-EVALUATION-ARGS : getLastStackTrace (eval(pgm)) .
rew in MINISTG-SIMON1-EVALUATION-TRACKTHUNKS : getLastStackTrace (eval(pgm)) .
